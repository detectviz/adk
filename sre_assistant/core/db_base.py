
# DB 介面抽象：便於在 SQLite 與 PostgreSQL 間切換。
from __future__ import annotations
from typing import Any, Dict, List, Optional, Protocol

class DatabaseInterface(Protocol):
        
    def insert_decision(self, session_id: str, agent_name: str, decision_type: str, input: str, output: str, confidence: float | None, execution_time_ms: int, trace_id: str | None = None, span_id: str | None = None) -> int: ...
        
    def update_decision_output(self, decision_id: int, output: str, execution_time_ms: int | None = None): ...
        
    def insert_tool_execution(self, decision_id: int | None, tool_name: str, parameters: str, result: str, status: str, error_message: str | None, duration_ms: int, trace_id: str | None = None, span_id: str | None = None) -> int: ...
        
    def list_decisions(self, limit: int = 20, offset: int = 0) -> List[Dict[str, Any]]: ...
        
    def list_tool_execs(self, limit: int = 20, offset: int = 0) -> List[Dict[str, Any]]: ...