syntax = "proto3";

package sreassistant.agent.v1;

import "google/protobuf/timestamp.proto";

// Agent 層通用消息（包含針對 software-bug-assistant 的擴展型訊息）
message AgentRequest {
  string agent_id = 1;
  repeated Observation observations = 2;
  map<string, string> metadata = 3;
  google.protobuf.Timestamp request_time = 4;
}

message AgentResponse {
  string agent_id = 1;
  repeated Action actions = 2;       // 要 runtime 執行的動作（或建議的動作）
  StateSnapshot snapshot = 3;        // Agent 的內部狀態快照
  string status = 4;                 // "ok" / "error"
  string error_message = 5;
  google.protobuf.Timestamp response_time = 6;
}

/* Domain-specific messages for bug investigation */
message BugReport {
  string id = 1;
  string title = 2;
  string description = 3;
  repeated Evidence evidences = 4;
  repeated StackTrace stack_traces = 5;
  map<string, string> context = 6; // e.g. service, cluster, pod, commit_sha
  google.protobuf.Timestamp detected_at = 7;
}

message Observation {
  string source = 1; // e.g. "monitoring.alert", "user.ticket", "log_stream"
  google.protobuf.Timestamp timestamp = 2;
  string type = 3;   // e.g. "error_rate_spike", "exception", "log_snippet"
  bytes payload = 4; // JSON encoded payload or raw bytes
}

message Evidence {
  string id = 1;
  string kind = 2;   // e.g. "logs", "metrics_snapshot", "dump", "git_diff"
  bytes payload = 3; // actual content or reference (e.g. signed url)
  string source_uri = 4;
}

message StackTrace {
  string language = 1; // e.g. "python", "go"
  string trace_text = 2;
  repeated string frames = 3;
}

message Action {
  string name = 1; // e.g. "triage", "open_issue", "apply_patch", "rollout"
  map<string,string> params = 2;
  repeated Event events = 3;
  TriageAction triage = 10;
  FixPatch patch = 11;
}

message TriageAction {
  string decision = 1; // "ignore", "needs_fix", "escalate", "rollback"
  string rationale = 2;
  repeated string owners = 3;
}

message FixPatch {
  string patch_id = 1;
  string repo = 2;
  string branch = 3;
  string diff = 4; // unified diff or patch content
  string apply_procedure = 5; // e.g. "create PR", "apply directly"
}

message Event {
  string name = 1;
  google.protobuf.Timestamp timestamp = 2;
  string detail = 3;
}

message StateSnapshot {
  map<string, string> kv = 1;
  google.protobuf.Timestamp last_updated = 2;
}